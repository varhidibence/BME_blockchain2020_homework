module Token where

template BikeAccount with
        owner: Party
        balance: Decimal
        name: Text
        issuer: Party
        isBikeOwner: Bool
    where
        signatory issuer
        observer owner
        ensure balance >= 0.0
        controller owner can
            Transfer: ContractId TokenTransfer with
                    tokens: Decimal
                    to: Party
                do 
                    assertMsg "Tokens need to be less or equal then balance" (balance >=tokens)
                    -- toAccount <- fetch to
                    create this with
                        balance = balance - tokens
                    create TokenTransfer with 
                        tokens = tokens
                        fromAccount = self
                        issuer = this.issuer
                        from = owner
                        to = to
            TransferToContract: ContractId BikeAccount with
                    tokens: Decimal
                do 
                    assertMsg "Tokens need to be less or equal then balance" (balance >=tokens)
                    create this with
                        balance = balance - tokens


template TokenTransfer with
        tokens: Decimal
        fromAccount: ContractId BikeAccount
        issuer: Party
        to: Party
        from: Party
    where
        signatory from,issuer

        controller to can
            Accept: ContractId BikeAccount with
                    accountCid: ContractId BikeAccount
                do
                    account <- fetch accountCid
                    archive accountCid
                    create account with
                        balance = account.balance + tokens

test_the_bike_token = scenario
    do
        alice <- getParty "Alice"
        bob <- getParty "Bob"
        bank <- getParty "BikeCoinBank"

        (aliceWalletCid,bobWalletCid) <- submit bank do
            bobWalletCid <- create BikeAccount with
                owner = bob
                balance = 500.0
                name = "BikeWallet"
                issuer = bank
                isBikeOwner = False
            aliceWalletCid <- create BikeAccount with
                owner = alice
                balance = 500.0
                name = "BikeWallet"
                issuer = bank 
                isBikeOwner = False
            return (aliceWalletCid,bobWalletCid)

        tokenTransferCid <- submit alice do
            exercise aliceWalletCid Transfer with
                to = bob
                tokens = 200.0

        submit bob do
            exercise tokenTransferCid Accept with
                accountCid = bobWalletCid

        assertMsg "Hello" (True == True)
